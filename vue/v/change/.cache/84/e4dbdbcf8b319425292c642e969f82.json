{"id":"observer.js","dependencies":[{"name":"C:\\Users\\曾佑森\\Desktop\\note\\vue\\v\\change\\package.json","includedInParent":true,"mtime":1588121737073},{"name":"./index","loc":{"line":1,"column":28},"parent":"C:\\Users\\曾佑森\\Desktop\\note\\vue\\v\\change\\observer.js","resolved":"C:\\Users\\曾佑森\\Desktop\\note\\vue\\v\\change\\index.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Observer = void 0;\n\nvar _index = _interopRequireDefault(require(\"./index\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/***\r\n * Observer 会被附加到每一个被侦测的Object 上。\r\n * 一旦被附加上，Observer会将Object的所有属性转换为getter/setter的形式\r\n * 来收集属性的依赖，并且当属性发生变化时会通知这些依赖\r\n*/\nvar Observer = /*#__PURE__*/function () {\n  function Observer(value) {\n    _classCallCheck(this, Observer);\n\n    this.value = value;\n\n    if (!Array.isArray(value)) {\n      this.walk(value);\n    }\n  }\n  /***\r\n   * walk会将每一个属性都转换成getter/setter的形式来侦测变化\r\n   * 这个方法只有在数据类型为Object时被调用\r\n  */\n\n\n  _createClass(Observer, [{\n    key: \"walk\",\n    value: function walk(obj) {\n      var keys = Object.keys(obj);\n\n      for (var i = 0; i < keys.length; i++) {\n        (0, _index.default)(obj, keys[i], obj[keys[i]]);\n      }\n    }\n  }]);\n\n  return Observer;\n}();\n\nexports.Observer = Observer;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":8,"column":0},"source":"observer.js","original":{"line":1,"column":0}},{"generated":{"line":18,"column":0},"source":"observer.js","original":{"line":2,"column":0}},{"name":"Observer","generated":{"line":23,"column":4},"source":"observer.js","original":{"line":7,"column":13}},{"generated":{"line":24,"column":0},"source":"observer.js","original":{"line":8,"column":4}},{"name":"value","generated":{"line":24,"column":20},"source":"observer.js","original":{"line":8,"column":16}},{"generated":{"line":24,"column":25},"source":"observer.js","original":{"line":8,"column":4}},{"generated":{"line":24,"column":27},"source":"observer.js","original":{"line":8,"column":23}},{"generated":{"line":25,"column":0},"source":"observer.js","original":{"line":8,"column":23}},{"generated":{"line":27,"column":0},"source":"observer.js","original":{"line":9,"column":8}},{"name":"value","generated":{"line":27,"column":9},"source":"observer.js","original":{"line":9,"column":13}},{"generated":{"line":27,"column":14},"source":"observer.js","original":{"line":9,"column":8}},{"name":"value","generated":{"line":27,"column":17},"source":"observer.js","original":{"line":9,"column":21}},{"generated":{"line":27,"column":22},"source":"observer.js","original":{"line":9,"column":8}},{"generated":{"line":29,"column":0},"source":"observer.js","original":{"line":11,"column":8}},{"generated":{"line":29,"column":8},"source":"observer.js","original":{"line":11,"column":12}},{"name":"Array","generated":{"line":29,"column":9},"source":"observer.js","original":{"line":11,"column":13}},{"generated":{"line":29,"column":14},"source":"observer.js","original":{"line":11,"column":18}},{"name":"isArray","generated":{"line":29,"column":15},"source":"observer.js","original":{"line":11,"column":19}},{"generated":{"line":29,"column":22},"source":"observer.js","original":{"line":11,"column":13}},{"name":"value","generated":{"line":29,"column":23},"source":"observer.js","original":{"line":11,"column":27}},{"generated":{"line":29,"column":28},"source":"observer.js","original":{"line":11,"column":13}},{"generated":{"line":29,"column":29},"source":"observer.js","original":{"line":11,"column":8}},{"generated":{"line":29,"column":31},"source":"observer.js","original":{"line":11,"column":35}},{"generated":{"line":30,"column":0},"source":"observer.js","original":{"line":12,"column":12}},{"name":"walk","generated":{"line":30,"column":11},"source":"observer.js","original":{"line":12,"column":17}},{"generated":{"line":30,"column":15},"source":"observer.js","original":{"line":12,"column":12}},{"name":"value","generated":{"line":30,"column":16},"source":"observer.js","original":{"line":12,"column":22}},{"generated":{"line":30,"column":21},"source":"observer.js","original":{"line":12,"column":12}},{"generated":{"line":31,"column":0},"source":"observer.js","original":{"line":13,"column":9}},{"generated":{"line":32,"column":0},"source":"observer.js","original":{"line":14,"column":5}},{"generated":{"line":33,"column":0},"source":"observer.js","original":{"line":15,"column":4}},{"name":"obj","generated":{"line":41,"column":25},"source":"observer.js","original":{"line":19,"column":9}},{"generated":{"line":41,"column":30},"source":"observer.js","original":{"line":19,"column":14}},{"generated":{"line":42,"column":0},"source":"observer.js","original":{"line":20,"column":8}},{"name":"keys","generated":{"line":42,"column":10},"source":"observer.js","original":{"line":20,"column":14}},{"generated":{"line":42,"column":14},"source":"observer.js","original":{"line":20,"column":18}},{"name":"Object","generated":{"line":42,"column":17},"source":"observer.js","original":{"line":20,"column":21}},{"generated":{"line":42,"column":23},"source":"observer.js","original":{"line":20,"column":27}},{"name":"keys","generated":{"line":42,"column":24},"source":"observer.js","original":{"line":20,"column":28}},{"generated":{"line":42,"column":28},"source":"observer.js","original":{"line":20,"column":21}},{"name":"obj","generated":{"line":42,"column":29},"source":"observer.js","original":{"line":20,"column":33}},{"generated":{"line":42,"column":32},"source":"observer.js","original":{"line":20,"column":21}},{"generated":{"line":42,"column":33},"source":"observer.js","original":{"line":20,"column":8}},{"generated":{"line":44,"column":0},"source":"observer.js","original":{"line":21,"column":8}},{"generated":{"line":44,"column":11},"source":"observer.js","original":{"line":21,"column":12}},{"name":"i","generated":{"line":44,"column":15},"source":"observer.js","original":{"line":21,"column":16}},{"generated":{"line":44,"column":16},"source":"observer.js","original":{"line":21,"column":17}},{"generated":{"line":44,"column":19},"source":"observer.js","original":{"line":21,"column":20}},{"generated":{"line":44,"column":20},"source":"observer.js","original":{"line":21,"column":8}},{"name":"i","generated":{"line":44,"column":22},"source":"observer.js","original":{"line":21,"column":23}},{"generated":{"line":44,"column":23},"source":"observer.js","original":{"line":21,"column":24}},{"name":"keys","generated":{"line":44,"column":26},"source":"observer.js","original":{"line":21,"column":27}},{"generated":{"line":44,"column":30},"source":"observer.js","original":{"line":21,"column":31}},{"name":"length","generated":{"line":44,"column":31},"source":"observer.js","original":{"line":21,"column":32}},{"generated":{"line":44,"column":37},"source":"observer.js","original":{"line":21,"column":8}},{"name":"i","generated":{"line":44,"column":39},"source":"observer.js","original":{"line":21,"column":40}},{"generated":{"line":44,"column":40},"source":"observer.js","original":{"line":21,"column":41}},{"generated":{"line":44,"column":42},"source":"observer.js","original":{"line":21,"column":8}},{"generated":{"line":44,"column":44},"source":"observer.js","original":{"line":21,"column":45}},{"generated":{"line":45,"column":0},"source":"observer.js","original":{"line":22,"column":12}},{"name":"obj","generated":{"line":45,"column":28},"source":"observer.js","original":{"line":22,"column":28}},{"generated":{"line":45,"column":31},"source":"observer.js","original":{"line":22,"column":12}},{"name":"keys","generated":{"line":45,"column":33},"source":"observer.js","original":{"line":22,"column":33}},{"generated":{"line":45,"column":37},"source":"observer.js","original":{"line":22,"column":37}},{"name":"i","generated":{"line":45,"column":38},"source":"observer.js","original":{"line":22,"column":38}},{"generated":{"line":45,"column":39},"source":"observer.js","original":{"line":22,"column":37}},{"generated":{"line":45,"column":40},"source":"observer.js","original":{"line":22,"column":12}},{"name":"obj","generated":{"line":45,"column":42},"source":"observer.js","original":{"line":22,"column":42}},{"generated":{"line":45,"column":45},"source":"observer.js","original":{"line":22,"column":45}},{"name":"keys","generated":{"line":45,"column":46},"source":"observer.js","original":{"line":22,"column":46}},{"generated":{"line":45,"column":50},"source":"observer.js","original":{"line":22,"column":50}},{"name":"i","generated":{"line":45,"column":51},"source":"observer.js","original":{"line":22,"column":51}},{"generated":{"line":45,"column":52},"source":"observer.js","original":{"line":22,"column":50}},{"generated":{"line":45,"column":53},"source":"observer.js","original":{"line":22,"column":45}},{"generated":{"line":45,"column":54},"source":"observer.js","original":{"line":22,"column":12}},{"generated":{"line":46,"column":0},"source":"observer.js","original":{"line":23,"column":9}},{"generated":{"line":47,"column":0},"source":"observer.js","original":{"line":24,"column":5}}],"sources":{"observer.js":"import defineReactiver from './index'\r\n/***\r\n * Observer 会被附加到每一个被侦测的Object 上。\r\n * 一旦被附加上，Observer会将Object的所有属性转换为getter/setter的形式\r\n * 来收集属性的依赖，并且当属性发生变化时会通知这些依赖\r\n*/\r\nexport class Observer{\r\n    constructor(value) {\r\n        this.value = value\r\n\r\n        if (!Array.isArray(value)) {\r\n            this.walk(value)\r\n        }\r\n    }\r\n    /***\r\n     * walk会将每一个属性都转换成getter/setter的形式来侦测变化\r\n     * 这个方法只有在数据类型为Object时被调用\r\n    */\r\n    walk(obj) {\r\n        const keys = Object.keys(obj)\r\n        for(let i = 0; i < keys.length; i++) {\r\n            defineReactiver(obj, keys[i], obj[keys[i]])\r\n        }\r\n    }\r\n}"},"lineCount":null}},"error":null,"hash":"b441f7987f49f89fe791211ff6f5f5b5","cacheData":{"env":{}}}